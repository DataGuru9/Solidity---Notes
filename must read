Various Ethereum clients have been developed using different languages like GOlang etc - most popular one is GETH
An 'Ethereum client' is just a term. It refers to any node able to parse and verify the blockchain, its smart contracts and everything related. It also allows you/provides interfaces to create transactions and mine blocks which is the key for any blockchain interaction.
 Mist is a user-friendly Graphical User Interface (GUI) wallet that runs geth in the background to sync with the network.
 The Ethereum stack consists of various components. At the core, there is the Ethereum blockchain running on the P2P Ethereum network. Secondly, there's an Ethereum client (usually geth) that runs on the nodes and connects to the peer-to-peer Ethereum network from where blockchain is downloaded and stored locally. It provides various functions, such as mining and account management. The local copy of the blockchain is synchronized regularly with the network. Another component is the web3.js library that allows interaction with geth via the Remote Procedure Call (RPC) interface.
 The consensus mechanism in Ethereum is based on the GHOST protocol - Greedy Heaviest Observed Subtree (GHOST) was first introduced as a mechanism to alleviate the issues arising out of fast block generation times that led to stale or orphan blocks. In GHOST, stale blocks are added in calculations to figure out the longest and heaviest chain of blocks. Stale blocks are called Uncles or Ommers in Ethereum.
Nonce is a number that is incremented by one every time a transaction is sent by the sender.
npm install solc currently does not install a globally available compiler. The solc npm package are just Javascript bindings to use in a Javascript module
